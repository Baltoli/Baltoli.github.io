webpackHotUpdate("static/development/pages/index.js",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_PageHead__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/PageHead */ "./components/PageHead.js");
/* harmony import */ var _components_TwoColumn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/TwoColumn */ "./components/TwoColumn.js");
/* harmony import */ var react_obfuscate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-obfuscate */ "./node_modules/react-obfuscate/dist/obfuscate.js");
/* harmony import */ var react_obfuscate__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_obfuscate__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_5__);
var _jsxFileName = "/home/bruce/code/site/pages/index.js";



function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






var Profile = function Profile() {
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-1556512897",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 8
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("img", {
    src: "/static/me.jpg",
    className: "jsx-1556512897",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 9
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "1556512897",
    css: "img.jsx-1556512897{border-radius:30px;display:block;margin-left:auto;max-width:75%;-webkit-filter:drop-shadow(0 0 8px #BBB);filter:drop-shadow(0 0 8px #BBB);}h1.jsx-1556512897{text-align:center;}@media(max-width:440px){img.jsx-1556512897{max-width:100%;margin:0 auto;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */",
    __self: this
  }));
};

var AboutMe = function AboutMe() {
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-4117862308",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2", {
    className: "jsx-4117862308",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36
    },
    __self: this
  }, "about me"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", {
    className: "jsx-4117862308",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37
    },
    __self: this
  }, "I am a first-year PhD student at the University of Edinburgh, supervised by ", react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {
    href: "#",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("a", {
    className: "jsx-4117862308",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39
    },
    __self: this
  }, "Professor Michael O'Boyle")), ". My primary research goal is to improve the integration of heterogenous accelerators and user code, giving compilers new techniques for optimising performance-sensitive workloads. Currently, my focus is on two-phase type-directed program synthesis as a way of learning the behaviour of black-box interfaces."), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("p", {
    className: "jsx-4117862308",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45
    },
    __self: this
  }, "In my free time I play rugby at ", react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {
    href: "#",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("a", {
    className: "jsx-4117862308",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46
    },
    __self: this
  }, "Lismore RFC")), ", and enjoy good food, coffee and live music as much as I can."), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "4117862308",
    css: "\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */",
    __self: this
  }));
};

var ResumeItem = function ResumeItem(_ref) {
  var name = _ref.name,
      place = _ref.place,
      date = _ref.date,
      description = _ref.description;
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-579762926",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("li", {
    className: "jsx-579762926",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-579762926" + " " + "placeTime",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
    className: "jsx-579762926" + " " + "place",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61
    },
    __self: this
  }, place), " (", react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
    className: "jsx-579762926" + " " + "date",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61
    },
    __self: this
  }, date), ")"), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-579762926" + " " + "degree",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
    className: "jsx-579762926" + " " + "name",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64
    },
    __self: this
  }, name), ": ", react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
    className: "jsx-579762926" + " " + "description",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64
    },
    __self: this
  }, description))), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "579762926",
    css: ".place.jsx-579762926{font-weight:bold;}li.jsx-579762926{margin-top:1.2em;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */",
    __self: this
  }));
};

var WorkLink = function WorkLink(_ref2) {
  var name = _ref2.name,
      link = _ref2.link;
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
    className: "jsx-3940750827",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {
    href: link,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("a", {
    className: "jsx-3940750827",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85
    },
    __self: this
  }, name)), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "3940750827",
    css: "a.jsx-3940750827{text-transform:lowercase;}span.jsx-3940750827{margin-left:0.75em;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */",
    __self: this
  }));
};

var WorkItem = function WorkItem(_ref3) {
  var name = _ref3.name,
      description = _ref3.description,
      props = _objectWithoutProperties(_ref3, ["name", "description"]);

  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-109741588",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("li", {
    className: "jsx-109741588",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-109741588" + " " + "info",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
    className: "jsx-109741588" + " " + "name",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101
    },
    __self: this
  }, name), props.children), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-109741588",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105
    },
    __self: this
  }, description)), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "109741588",
    css: "li.jsx-109741588{margin-top:1.2em;}.name.jsx-109741588{font-weight:bold;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */",
    __self: this
  }));
};

var ResumeList = function ResumeList(_ref4) {
  var align = _ref4.align,
      title = _ref4.title,
      props = _objectWithoutProperties(_ref4, ["align", "title"]);

  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([["3373959770", [align]]]),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h2", {
    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([["3373959770", [align]]]),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124
    },
    __self: this
  }, title), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("ul", {
    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a.dynamic([["3373959770", [align]]]),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125
    },
    __self: this
  }, props.children), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "3373959770",
    css: "ul.__jsx-style-dynamic-selector{list-style-type:none;margin:0;padding:0;}div.__jsx-style-dynamic-selector{text-align:".concat(align, ";}@media(max-width:440px){div.__jsx-style-dynamic-selector{text-align:left;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */"),
    dynamic: [align],
    __self: this
  }));
};

var Education = function Education() {
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ResumeList, {
    align: "right",
    title: "education",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ResumeItem, {
    name: "PhD Pervasive Parallelism",
    place: "University of Edinburgh",
    date: "2018\u2013",
    description: "in progress",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ResumeItem, {
    name: "MScR Pervasive Parallelism",
    place: "University of Edinburgh",
    date: "2017\u201318",
    description: "Distinction",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 158
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ResumeItem, {
    name: "MEng Computer Science",
    place: "University of Cambridge",
    date: "2016\u201317",
    description: "Distinction",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ResumeItem, {
    name: "BA Computer Science",
    place: "University of Cambridge",
    date: "2013\u201316",
    description: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("span", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 176
      },
      __self: this
    }, "1", react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("sup", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 176
      },
      __self: this
    }, "st"), " Class"),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172
    },
    __self: this
  }));
};

var Work = function Work() {
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(ResumeList, {
    align: "left",
    title: "work and projects",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkItem, {
    name: "Program Synthesis",
    description: "\n        The main focus of my MScR and PhD work so far is the development of program synthesis\n        techniques that aim to learn the behaviour of black-box interfaces. My approach uses\n        two-phase synthesis driven by type heuristics to synthesise complex control flow.\n      ",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 183
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "Github",
    link: "https://github.com/baltoli/accsynt",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 191
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "Dissertation",
    link: "static/msc.pdf",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 195
    },
    __self: this
  })), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkItem, {
    name: "TESLA",
    description: " During my MEng I contributed to TESLA, an existing project that allows for temporal assertions to be added to C programs and checked at runtime. I used model-checking to prove that individual assertions could be safely removed, improving the performance of programs using TESLA. ",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "Github",
    link: "https://github.com/cadets/tesla-static-analysis",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "Dissertation",
    link: "static/tesla.pdf",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215
    },
    __self: this
  })), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkItem, {
    name: "GoCardless",
    description: " At GoCardless I was a member of the Core Payments team, responsible for developing the infrastructure used by the company to process Direct Debit transactions. ",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 221
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "About",
    link: "https://www.gocardless.com",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228
    },
    __self: this
  })), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkItem, {
    name: "PCL",
    description: "",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 234
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "Github",
    link: "https://github.com/baltoli/pcl",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "Dissertation",
    link: "static/pcl.pdf",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 243
    },
    __self: this
  })), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkItem, {
    name: "RealVNC",
    description: "",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 249
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkLink, {
    name: "About",
    link: "https://www.realvnc.com",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 253
    },
    __self: this
  })), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(WorkItem, {
    name: "Other",
    description: "",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 259
    },
    __self: this
  }));
};

var Index = function Index() {
  return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("div", {
    className: "jsx-247033640",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 268
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_PageHead__WEBPACK_IMPORTED_MODULE_2__["default"], {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 269
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_TwoColumn__WEBPACK_IMPORTED_MODULE_3__["default"], {
    header: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1", {
      className: "jsx-247033640",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 272
      },
      __self: this
    }, "bruce collie"),
    left: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Profile, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 273
      },
      __self: this
    }),
    right: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(AboutMe, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 274
      },
      __self: this
    }),
    center: true,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 271
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_components_TwoColumn__WEBPACK_IMPORTED_MODULE_3__["default"], {
    header: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement("h1", {
      className: "jsx-247033640",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 279
      },
      __self: this
    }, "resume"),
    left: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Education, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 280
      },
      __self: this
    }),
    right: react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Work, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 281
      },
      __self: this
    }),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 278
    },
    __self: this
  }), react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default.a, {
    styleId: "247033640",
    css: "\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2JydWNlL2NvZGUvc2l0ZS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyUmdCIiwiZmlsZSI6Ii9ob21lL2JydWNlL2NvZGUvc2l0ZS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYWdlSGVhZCBmcm9tICcuLi9jb21wb25lbnRzL1BhZ2VIZWFkJ1xuaW1wb3J0IFR3b0NvbHVtbiBmcm9tICcuLi9jb21wb25lbnRzL1R3b0NvbHVtbidcbmltcG9ydCBPYmZ1c2NhdGUgZnJvbSAncmVhY3Qtb2JmdXNjYXRlJ1xuXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmNvbnN0IFByb2ZpbGUgPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAgPGltZyBzcmM9XCIvc3RhdGljL21lLmpwZ1wiLz5cblxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIGltZyB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiA3NSU7XG4gICAgICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDhweCAjQkJCKTtcbiAgICAgIH1cblxuICAgICAgaDEge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDQ0MHB4KSB7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYH08L3N0eWxlPlxuICA8L2Rpdj5cbilcblxuY29uc3QgQWJvdXRNZSA9ICgpID0+IChcbiAgPGRpdj5cbiAgICA8aDI+YWJvdXQgbWU8L2gyPlxuICAgIDxwPlxuICAgICAgSSBhbSBhIGZpcnN0LXllYXIgUGhEIHN0dWRlbnQgYXQgdGhlIFVuaXZlcnNpdHkgb2YgRWRpbmJ1cmdoLCBzdXBlcnZpc2VkIGJ5IDxMaW5rIGhyZWY9JyMnPlxuICAgICAgPGE+UHJvZmVzc29yIE1pY2hhZWwgTydCb3lsZTwvYT48L0xpbms+LiBNeSBwcmltYXJ5IHJlc2VhcmNoIGdvYWwgaXMgdG8gaW1wcm92ZSB0aGUgaW50ZWdyYXRpb25cbiAgICAgIG9mIGhldGVyb2dlbm91cyBhY2NlbGVyYXRvcnMgYW5kIHVzZXIgY29kZSwgZ2l2aW5nIGNvbXBpbGVycyBuZXcgdGVjaG5pcXVlcyBmb3Igb3B0aW1pc2luZ1xuICAgICAgcGVyZm9ybWFuY2Utc2Vuc2l0aXZlIHdvcmtsb2Fkcy4gQ3VycmVudGx5LCBteSBmb2N1cyBpcyBvbiB0d28tcGhhc2UgdHlwZS1kaXJlY3RlZCBwcm9ncmFtXG4gICAgICBzeW50aGVzaXMgYXMgYSB3YXkgb2YgbGVhcm5pbmcgdGhlIGJlaGF2aW91ciBvZiBibGFjay1ib3ggaW50ZXJmYWNlcy5cbiAgICA8L3A+XG5cbiAgICA8cD5cbiAgICAgIEluIG15IGZyZWUgdGltZSBJIHBsYXkgcnVnYnkgYXQgPExpbmsgaHJlZj0nIyc+PGE+TGlzbW9yZSBSRkM8L2E+PC9MaW5rPiwgYW5kIGVuam95IGdvb2QgZm9vZCxcbiAgICAgIGNvZmZlZSBhbmQgbGl2ZSBtdXNpYyBhcyBtdWNoIGFzIEkgY2FuLlxuICAgIDwvcD5cblxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgIHAge1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9kaXY+XG4pXG5cbmNvbnN0IFJlc3VtZUl0ZW0gPSAoe25hbWUsIHBsYWNlLCBkYXRlLCBkZXNjcmlwdGlvbn0pID0+IChcbiAgPGRpdj5cbiAgICA8bGk+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBsYWNlVGltZVwiPlxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJwbGFjZVwiPntwbGFjZX08L3NwYW4+ICg8c3BhbiBjbGFzc05hbWU9XCJkYXRlXCI+e2RhdGV9PC9zcGFuPilcbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZWdyZWVcIj5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPntuYW1lfTwvc3Bhbj46IDxzcGFuIGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uXCI+e2Rlc2NyaXB0aW9ufTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvbGk+XG5cbiAgICA8c3R5bGUganN4PntgXG4gICAgICAucGxhY2Uge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIH1cblxuICAgICAgLmRlZ3JlZSB7XG4gICAgICB9XG5cbiAgICAgIGxpIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMS4yZW07XG4gICAgICB9XG4gICAgYH08L3N0eWxlPlxuICA8L2Rpdj5cbilcblxuY29uc3QgV29ya0xpbmsgPSAoe25hbWUsIGxpbmt9KSA9PiAoXG4gIDxzcGFuPlxuICAgIDxMaW5rIGhyZWY9e2xpbmt9PjxhPntuYW1lfTwvYT48L0xpbms+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgYSB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG4gICAgICB9XG4gICAgICBzcGFuIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuNzVlbTtcbiAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gIDwvc3Bhbj5cbilcblxuY29uc3QgV29ya0l0ZW0gPSAoe25hbWUsIGRlc2NyaXB0aW9uLCAuLi5wcm9wc30pID0+IChcbiAgPGRpdj5cbiAgICA8bGk+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImluZm9cIj5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPntuYW1lfTwvc3Bhbj5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXY+e2Rlc2NyaXB0aW9ufTwvZGl2PlxuICAgIDwvbGk+XG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgbGkge1xuICAgICAgICBtYXJnaW4tdG9wOiAxLjJlbTtcbiAgICAgIH1cblxuICAgICAgLmluZm8ge1xuICAgICAgfVxuXG4gICAgICAubmFtZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9kaXY+XG4pXG5cbmNvbnN0IFJlc3VtZUxpc3QgPSAoe2FsaWduLCB0aXRsZSwgLi4ucHJvcHN9KSA9PiAoXG4gIDxkaXY+XG4gICAgPGgyPnt0aXRsZX08L2gyPlxuICAgIDx1bD5cbiAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICA8L3VsPlxuXG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgdWwge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgIH1cblxuICAgICAgZGl2IHtcbiAgICAgICAgdGV4dC1hbGlnbjogJHthbGlnbn07XG4gICAgICB9XG5cbiAgICAgIEBtZWRpYShtYXgtd2lkdGg6IDQ0MHB4KSB7XG4gICAgICAgIGRpdiB7XG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9kaXY+XG4pXG5cbmNvbnN0IEVkdWNhdGlvbiA9ICgpID0+IChcbiAgPFJlc3VtZUxpc3QgYWxpZ249J3JpZ2h0JyB0aXRsZT0nZWR1Y2F0aW9uJz5cbiAgICA8UmVzdW1lSXRlbSBcbiAgICAgIG5hbWU9XCJQaEQgUGVydmFzaXZlIFBhcmFsbGVsaXNtXCJcbiAgICAgIHBsYWNlPVwiVW5pdmVyc2l0eSBvZiBFZGluYnVyZ2hcIlxuICAgICAgZGF0ZT1cIjIwMTgmbmRhc2g7XCJcbiAgICAgIGRlc2NyaXB0aW9uPVwiaW4gcHJvZ3Jlc3NcIlxuICAgIC8+XG5cbiAgICA8UmVzdW1lSXRlbSBcbiAgICAgIG5hbWU9XCJNU2NSIFBlcnZhc2l2ZSBQYXJhbGxlbGlzbVwiXG4gICAgICBwbGFjZT1cIlVuaXZlcnNpdHkgb2YgRWRpbmJ1cmdoXCJcbiAgICAgIGRhdGU9XCIyMDE3Jm5kYXNoOzE4XCJcbiAgICAgIGRlc2NyaXB0aW9uPVwiRGlzdGluY3Rpb25cIlxuICAgIC8+XG5cbiAgICA8UmVzdW1lSXRlbSBcbiAgICAgIG5hbWU9XCJNRW5nIENvbXB1dGVyIFNjaWVuY2VcIlxuICAgICAgcGxhY2U9XCJVbml2ZXJzaXR5IG9mIENhbWJyaWRnZVwiXG4gICAgICBkYXRlPVwiMjAxNiZuZGFzaDsxN1wiXG4gICAgICBkZXNjcmlwdGlvbj1cIkRpc3RpbmN0aW9uXCJcbiAgICAvPlxuXG4gICAgPFJlc3VtZUl0ZW0gXG4gICAgICBuYW1lPVwiQkEgQ29tcHV0ZXIgU2NpZW5jZVwiXG4gICAgICBwbGFjZT1cIlVuaXZlcnNpdHkgb2YgQ2FtYnJpZGdlXCJcbiAgICAgIGRhdGU9XCIyMDEzJm5kYXNoOzE2XCJcbiAgICAgIGRlc2NyaXB0aW9uPXs8c3Bhbj4xPHN1cD5zdDwvc3VwPiBDbGFzczwvc3Bhbj59XG4gICAgLz5cbiAgPC9SZXN1bWVMaXN0PlxuKVxuXG5jb25zdCBXb3JrID0gKCkgPT4gKFxuICA8UmVzdW1lTGlzdCBhbGlnbj0nbGVmdCcgdGl0bGU9J3dvcmsgYW5kIHByb2plY3RzJz5cbiAgICA8V29ya0l0ZW1cbiAgICAgIG5hbWU9XCJQcm9ncmFtIFN5bnRoZXNpc1wiXG4gICAgICBkZXNjcmlwdGlvbj17YFxuICAgICAgICBUaGUgbWFpbiBmb2N1cyBvZiBteSBNU2NSIGFuZCBQaEQgd29yayBzbyBmYXIgaXMgdGhlIGRldmVsb3BtZW50IG9mIHByb2dyYW0gc3ludGhlc2lzXG4gICAgICAgIHRlY2huaXF1ZXMgdGhhdCBhaW0gdG8gbGVhcm4gdGhlIGJlaGF2aW91ciBvZiBibGFjay1ib3ggaW50ZXJmYWNlcy4gTXkgYXBwcm9hY2ggdXNlc1xuICAgICAgICB0d28tcGhhc2Ugc3ludGhlc2lzIGRyaXZlbiBieSB0eXBlIGhldXJpc3RpY3MgdG8gc3ludGhlc2lzZSBjb21wbGV4IGNvbnRyb2wgZmxvdy5cbiAgICAgIGB9XG4gICAgPlxuICAgICAgPFdvcmtMaW5rIFxuICAgICAgICBuYW1lPVwiR2l0aHViXCJcbiAgICAgICAgbGluaz1cImh0dHBzOi8vZ2l0aHViLmNvbS9iYWx0b2xpL2FjY3N5bnRcIlxuICAgICAgLz5cbiAgICAgIDxXb3JrTGluayBcbiAgICAgICAgbmFtZT1cIkRpc3NlcnRhdGlvblwiXG4gICAgICAgIGxpbms9XCJzdGF0aWMvbXNjLnBkZlwiXG4gICAgICAvPlxuICAgIDwvV29ya0l0ZW0+XG5cbiAgICA8V29ya0l0ZW1cbiAgICAgIG5hbWU9XCJURVNMQVwiXG4gICAgICBkZXNjcmlwdGlvbj1cIlxuICAgICAgICBEdXJpbmcgbXkgTUVuZyBJIGNvbnRyaWJ1dGVkIHRvIFRFU0xBLCBhbiBleGlzdGluZyBwcm9qZWN0IHRoYXQgYWxsb3dzIGZvciB0ZW1wb3JhbFxuICAgICAgICBhc3NlcnRpb25zIHRvIGJlIGFkZGVkIHRvIEMgcHJvZ3JhbXMgYW5kIGNoZWNrZWQgYXQgcnVudGltZS4gSSB1c2VkIG1vZGVsLWNoZWNraW5nXG4gICAgICAgIHRvIHByb3ZlIHRoYXQgaW5kaXZpZHVhbCBhc3NlcnRpb25zIGNvdWxkIGJlIHNhZmVseSByZW1vdmVkLCBpbXByb3ZpbmcgdGhlIHBlcmZvcm1hbmNlXG4gICAgICAgIG9mIHByb2dyYW1zIHVzaW5nIFRFU0xBLlxuICAgICAgXCJcbiAgICA+XG4gICAgICA8V29ya0xpbmtcbiAgICAgICAgbmFtZT1cIkdpdGh1YlwiXG4gICAgICAgIGxpbms9XCJodHRwczovL2dpdGh1Yi5jb20vY2FkZXRzL3Rlc2xhLXN0YXRpYy1hbmFseXNpc1wiXG4gICAgICAvPlxuXG4gICAgICA8V29ya0xpbmtcbiAgICAgICAgbmFtZT1cIkRpc3NlcnRhdGlvblwiXG4gICAgICAgIGxpbms9XCJzdGF0aWMvdGVzbGEucGRmXCJcbiAgICAgIC8+XG4gICAgPC9Xb3JrSXRlbT5cblxuICAgIDxXb3JrSXRlbVxuICAgICAgbmFtZT1cIkdvQ2FyZGxlc3NcIlxuICAgICAgZGVzY3JpcHRpb249XCJcbiAgICAgICAgQXQgR29DYXJkbGVzcyBJIHdhcyBhIG1lbWJlciBvZiB0aGUgQ29yZSBQYXltZW50cyB0ZWFtLCByZXNwb25zaWJsZSBmb3IgZGV2ZWxvcGluZ1xuICAgICAgICB0aGUgaW5mcmFzdHJ1Y3R1cmUgdXNlZCBieSB0aGUgY29tcGFueSB0byBwcm9jZXNzIERpcmVjdCBEZWJpdCB0cmFuc2FjdGlvbnMuXG4gICAgICBcIlxuICAgID5cbiAgICAgIDxXb3JrTGlua1xuICAgICAgICBuYW1lPVwiQWJvdXRcIlxuICAgICAgICBsaW5rPVwiaHR0cHM6Ly93d3cuZ29jYXJkbGVzcy5jb21cIlxuICAgICAgLz5cbiAgICA8L1dvcmtJdGVtPlxuXG4gICAgPFdvcmtJdGVtXG4gICAgICBuYW1lPVwiUENMXCJcbiAgICAgIGRlc2NyaXB0aW9uPVwiXCJcbiAgICA+XG4gICAgICA8V29ya0xpbmtcbiAgICAgICAgbmFtZT1cIkdpdGh1YlwiXG4gICAgICAgIGxpbms9XCJodHRwczovL2dpdGh1Yi5jb20vYmFsdG9saS9wY2xcIlxuICAgICAgLz5cblxuICAgICAgPFdvcmtMaW5rXG4gICAgICAgIG5hbWU9XCJEaXNzZXJ0YXRpb25cIlxuICAgICAgICBsaW5rPVwic3RhdGljL3BjbC5wZGZcIlxuICAgICAgLz5cbiAgICA8L1dvcmtJdGVtPlxuXG4gICAgPFdvcmtJdGVtXG4gICAgICBuYW1lPVwiUmVhbFZOQ1wiXG4gICAgICBkZXNjcmlwdGlvbj1cIlwiXG4gICAgPlxuICAgICAgPFdvcmtMaW5rXG4gICAgICAgIG5hbWU9XCJBYm91dFwiXG4gICAgICAgIGxpbms9XCJodHRwczovL3d3dy5yZWFsdm5jLmNvbVwiXG4gICAgICAvPlxuICAgIDwvV29ya0l0ZW0+XG5cbiAgICA8V29ya0l0ZW1cbiAgICAgIG5hbWU9XCJPdGhlclwiXG4gICAgICBkZXNjcmlwdGlvbj1cIlwiXG4gICAgPlxuICAgIDwvV29ya0l0ZW0+XG4gIDwvUmVzdW1lTGlzdD5cbilcblxuY29uc3QgSW5kZXggPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAgPFBhZ2VIZWFkIC8+XG5cbiAgICA8VHdvQ29sdW1uXG4gICAgICBoZWFkZXI9ezxoMT5icnVjZSBjb2xsaWU8L2gxPn1cbiAgICAgIGxlZnQ9ezxQcm9maWxlIC8+fVxuICAgICAgcmlnaHQ9ezxBYm91dE1lIC8+fVxuICAgICAgY2VudGVyPXt0cnVlfVxuICAgIC8+XG5cbiAgICA8VHdvQ29sdW1uXG4gICAgICBoZWFkZXI9ezxoMT5yZXN1bWU8L2gxPn1cbiAgICAgIGxlZnQ9ezxFZHVjYXRpb24gLz59XG4gICAgICByaWdodD17PFdvcmsgLz59XG4gICAgLz5cblxuICAgIDxzdHlsZSBqc3g+e2BcbiAgICBgfTwvc3R5bGU+XG4gIDwvZGl2PlxuKVxuXG5leHBvcnQgZGVmYXVsdCBJbmRleFxuIl19 */\n/*@ sourceURL=/home/bruce/code/site/pages/index.js */",
    __self: this
  }));
};

/* harmony default export */ __webpack_exports__["default"] = (Index);
    (function (Component, route) {
      if(!Component) return
      if (false) {}
      module.hot.accept()
      Component.__route = route

      if (module.hot.status() === 'idle') return

      var components = next.router.components
      for (var r in components) {
        if (!components.hasOwnProperty(r)) continue

        if (components[r].Component.__route === route) {
          next.router.update(r, Component)
        }
      }
    })(typeof __webpack_exports__ !== 'undefined' ? __webpack_exports__.default : (module.exports.default || module.exports), "/")
  
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=index.js.a51a7dbc00a07d31da2f.hot-update.js.map